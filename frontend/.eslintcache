[{"C:\\Users\\garyi\\Documents\\dev\\SheetShare\\screen-share\\src\\index.tsx":"1","C:\\Users\\garyi\\Documents\\dev\\SheetShare\\screen-share\\src\\reportWebVitals.ts":"2","C:\\Users\\garyi\\Documents\\dev\\SheetShare\\screen-share\\src\\App.tsx":"3","C:\\Users\\garyi\\Documents\\dev\\SheetShare\\screen-share\\src\\Automate.js":"4","C:\\Users\\garyi\\Documents\\dev\\SheetShare\\screen-share\\src\\LoginForm.js":"5"},{"size":521,"mtime":1610835813846,"results":"6","hashOfConfig":"7"},{"size":425,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":2428,"mtime":1610835813840,"results":"9","hashOfConfig":"7"},{"size":462,"mtime":1610835813842,"results":"10","hashOfConfig":"7"},{"size":1221,"mtime":1610835813843,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"l81y08",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},"C:\\Users\\garyi\\Documents\\dev\\SheetShare\\screen-share\\src\\index.tsx",[],["28","29"],"C:\\Users\\garyi\\Documents\\dev\\SheetShare\\screen-share\\src\\reportWebVitals.ts",[],"C:\\Users\\garyi\\Documents\\dev\\SheetShare\\screen-share\\src\\App.tsx",["30","31","32"],"import React, {useState} from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport ReactDOM from 'react-dom';\r\nimport axios from 'axios';\r\n\r\n\r\nimport LoginForm from \"./LoginForm\";\r\nimport Automate from \"./Automate\";\r\n\r\nfunction App() {\r\n  const admin1 = {\r\n    username: \"ian\",\r\n    password: \"passwordian\"\r\n  }\r\n  const admin2 = {\r\n    username: \"vatsal\",\r\n    password: \"passwordvatsal\"\r\n  }\r\n\r\n  const [user, setUser] = useState({username: \"\"});\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const Login = details => {\r\n    console.log(details);\r\n\r\n    if((details.username === admin1.username && details.password === admin1.password) || details.username === admin2.username && details.password === admin2.password){\r\n      console.log(\"Log In Works\");\r\n      setUser({\r\n        username: details.username\r\n      });\r\n\r\n      axios({\r\n        method: 'post',\r\n        url: 'http://localhost:8000/api/users/login',\r\n        data: {\r\n          username: details.username,\r\n          password: details.password\r\n        }\r\n      });\r\n      \r\n      /*\r\n      fetch('http:localhost:8000/api/users/login', {\r\n  method: 'POST',\r\n  headers: {\r\n    'Accept': 'application/json',\r\n    'Content-Type': 'application/json',\r\n  },\r\n  body: JSON.stringify({\r\n    username: details.username,\r\n    password: details.password,\r\n  })\r\n})*/\r\n      \r\n    }\r\n    \r\n    else{\r\n      console.log(\"details do not match\")\r\n      setError(\"Username or Password does not match\")\r\n    }\r\n}\r\n\r\nconst Logout = () => {\r\n  setUser({username: \"\"});\r\n}\r\n\r\nconst Automatef = () => {\r\n  console.log(\"Automate works\")\r\n  ReactDOM.render(\r\n    <Router>\r\n        <div className=\"App\">\r\n        <Route path = \"/user\" component={Automate} />\r\n        </div>\r\n    </Router>,\r\n    document.getElementById('root')\r\n);\r\n}\r\n\r\nvar imageName = require('./ss.jpg')\r\n\r\n\r\n  return(\r\n    <div className=\"App\">\r\n      {(user.username !== \"\") ?(\r\n        <div className=\"welcome\">\r\n          <h2> Welcome, <span>{user.username}</span> </h2>\r\n          <input onClick={Logout} type = \"submit\" value = \"Log Out\"/>\r\n          <input onClick={Automatef} type = \"submit\" value = \"Automate\"/>\r\n          <Router>\r\n            <Route path = \"/user\" component={Automate} />\r\n          </Router>\r\n        </div>\r\n      ):(\r\n        <LoginForm  Login={Login} error = {error}/>\r\n      )}\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default App;\r\n\r\n","C:\\Users\\garyi\\Documents\\dev\\SheetShare\\screen-share\\src\\Automate.js",["33","34","35","36"],"import { setMaxListeners } from 'process';\r\nimport React, {Component} from 'react'\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport ReactDOM from 'react-dom';\r\n\r\n\r\nexport default class Automate extends Component {\r\n    render() {\r\n      return (\r\n        <div className=\"Home\">\r\n          <div className=\"lander\">\r\n            <p>test</p>\r\n            <form>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }",["37","38"],"C:\\Users\\garyi\\Documents\\dev\\SheetShare\\screen-share\\src\\LoginForm.js",["39","40"],"import { setMaxListeners } from 'process';\r\nimport React, {useState} from 'react'\r\n\r\nfunction LoginForm({Login, error}){\r\n    const [details, setDetails] = useState({username: \"\", password: \"\"})\r\n    \r\n    const submitHandler = e =>{\r\n        e.preventDefault();\r\n        Login(details);\r\n    }\r\n    \r\n    \r\n    \r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <div className=\"innerform\">\r\n                <h2> Log In </h2>\r\n                {(error != \"\") ? (<div  className = \"error\">{error}</div>) : \"\"}\r\n                <div className = \"form group\">\r\n                    <input placeholder = \"Username\"type = \"text\" name = \"username\" id= \"username\" onChange={e => setDetails({...details, username: e.target.value})} value = {details.username}/>  \r\n                </div>\r\n                <div className = \"form group\">\r\n                    <input placeholder=\"Password\" type = \"password\" name = \"password\" id= \"password\" onChange={e => setDetails({...details, password: e.target.value})} value = {details.password}/>  \r\n                </div>\r\n\r\n                <input type = \"submit\" value = \"Log In\"/>\r\n                \r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default LoginForm;",["41","42"],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":27,"column":87,"nodeType":"49","messageId":"50","endLine":27,"endColumn":89},{"ruleId":"47","severity":1,"message":"48","line":27,"column":127,"nodeType":"49","messageId":"50","endLine":27,"endColumn":129},{"ruleId":"51","severity":1,"message":"52","line":79,"column":5,"nodeType":"53","messageId":"54","endLine":79,"endColumn":14},{"ruleId":"55","severity":1,"message":"56","line":1,"column":10,"nodeType":"53","messageId":"54","endLine":1,"endColumn":25},{"ruleId":"55","severity":1,"message":"57","line":3,"column":27,"nodeType":"53","messageId":"54","endLine":3,"endColumn":33},{"ruleId":"55","severity":1,"message":"58","line":3,"column":35,"nodeType":"53","messageId":"54","endLine":3,"endColumn":40},{"ruleId":"55","severity":1,"message":"59","line":4,"column":8,"nodeType":"53","messageId":"54","endLine":4,"endColumn":16},{"ruleId":"43","replacedBy":"60"},{"ruleId":"45","replacedBy":"61"},{"ruleId":"55","severity":1,"message":"56","line":1,"column":10,"nodeType":"53","messageId":"54","endLine":1,"endColumn":25},{"ruleId":"62","severity":1,"message":"63","line":18,"column":25,"nodeType":"64","messageId":"65","endLine":18,"endColumn":27},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","@typescript-eslint/no-unused-vars","'imageName' is assigned a value but never used.","Identifier","unusedVar","no-unused-vars","'setMaxListeners' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'ReactDOM' is defined but never used.",["66"],["67"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]